// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(SicerContext))]
    [Migration("20230908120335_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Area", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.HasKey("Pk_Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Dominio.Entities.AreaUsuario", b =>
                {
                    b.Property<int>("Pk_AreaUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fk_Area")
                        .HasColumnType("longtext");

                    b.Property<int>("Fk_Usuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("Pk_AreaUsuario");

                    b.HasIndex("AreasPk_Id");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("AreaUsuarios");
                });

            modelBuilder.Entity("Dominio.Entities.Contacto", b =>
                {
                    b.Property<int>("Pk_Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fk_TipoContacto")
                        .HasColumnType("longtext");

                    b.Property<int>("Fk_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeContactosPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("Pk_Numero");

                    b.HasIndex("TipoDeContactosPk_Id");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Dominio.Entities.DetalleIncidencia", b =>
                {
                    b.Property<int>("Pk_DetalleIncidencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescripcionIncidencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Fk_Herramienta")
                        .HasColumnType("longtext");

                    b.Property<int>("Fk_Incidencia")
                        .HasColumnType("int");

                    b.Property<string>("Fk_NivelIncidencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Fk_TipoIncidencia")
                        .HasColumnType("longtext");

                    b.Property<string>("HerramientasDeTrabajoPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IncidenciasPK_Id")
                        .HasColumnType("int");

                    b.Property<string>("NivelDeIncidenciasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TiposDeIncidenciasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_DetalleIncidencia");

                    b.HasIndex("HerramientasDeTrabajoPk_Id");

                    b.HasIndex("IncidenciasPK_Id");

                    b.HasIndex("NivelDeIncidenciasPk_Id");

                    b.HasIndex("TiposDeIncidenciasPk_Id");

                    b.ToTable("DetalleDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Direccion", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FK_TipoVia")
                        .HasColumnType("longtext");

                    b.Property<int>("FK_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Letra")
                        .HasColumnType("longtext");

                    b.Property<int>("NroDireccion")
                        .HasColumnType("int");

                    b.Property<string>("SufijoCardinal")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoDeViasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("Pk_Id");

                    b.HasIndex("TipoDeViasPk_Id");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("Dominio.Entities.HerramientaTrabajo", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_Id");

                    b.ToTable("HerramientasDeTrabajo");
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.Property<int>("PK_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Fk_Area")
                        .HasColumnType("longtext");

                    b.Property<string>("Fk_Lugar")
                        .HasColumnType("longtext");

                    b.Property<int>("Fk_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("LugaresPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("PK_Id");

                    b.HasIndex("AreasPk_Id");

                    b.HasIndex("LugaresPk_Id");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Lugar", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AreasPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fk_Area")
                        .HasColumnType("longtext");

                    b.HasKey("Pk_Id");

                    b.HasIndex("AreasPk_Id");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("Dominio.Entities.NivelIncidencia", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.HasKey("Pk_Id");

                    b.ToTable("NivelDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("Dominio.Entities.TipoContacto", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_Id");

                    b.ToTable("TipoDeContactos");
                });

            modelBuilder.Entity("Dominio.Entities.TipoDocumento", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_Id");

                    b.ToTable("TipoDeDocumentos");
                });

            modelBuilder.Entity("Dominio.Entities.TipoIncidencia", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_Id");

                    b.ToTable("TipoDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.TipoVia", b =>
                {
                    b.Property<string>("Pk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Abreviatura")
                        .HasColumnType("longtext");

                    b.HasKey("Pk_Id");

                    b.ToTable("TipoDeVias");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Pk_IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FK_TipoDocumento")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoDeDocumentosPk_Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Pk_IdUser");

                    b.HasIndex("TipoDeDocumentosPk_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fk_Rol")
                        .HasColumnType("longtext");

                    b.Property<int>("Fk_UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("RolPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("RolPk_Id");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("UsuarioRols");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<string>("RolesPk_Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UsuariosPk_IdUser")
                        .HasColumnType("int");

                    b.HasKey("RolesPk_Id", "UsuariosPk_IdUser");

                    b.HasIndex("UsuariosPk_IdUser");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("Dominio.Entities.AreaUsuario", b =>
                {
                    b.HasOne("Dominio.Entities.Area", "Areas")
                        .WithMany("AreaDeUsuarios")
                        .HasForeignKey("AreasPk_Id");

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("AreaDeUsuarios")
                        .HasForeignKey("UsuariosPk_IdUser");

                    b.Navigation("Areas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.Contacto", b =>
                {
                    b.HasOne("Dominio.Entities.TipoContacto", "TipoDeContactos")
                        .WithMany("Contactos")
                        .HasForeignKey("TipoDeContactosPk_Id");

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("Contactos")
                        .HasForeignKey("UsuariosPk_IdUser");

                    b.Navigation("TipoDeContactos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.DetalleIncidencia", b =>
                {
                    b.HasOne("Dominio.Entities.HerramientaTrabajo", "HerramientasDeTrabajo")
                        .WithMany("DetalleDeIncidencias")
                        .HasForeignKey("HerramientasDeTrabajoPk_Id");

                    b.HasOne("Dominio.Entities.Incidencia", "Incidencias")
                        .WithMany("DetalleDeIncidencias")
                        .HasForeignKey("IncidenciasPK_Id");

                    b.HasOne("Dominio.Entities.NivelIncidencia", "NivelDeIncidencias")
                        .WithMany("DetalleDeIncidencias")
                        .HasForeignKey("NivelDeIncidenciasPk_Id");

                    b.HasOne("Dominio.Entities.TipoIncidencia", "TiposDeIncidencias")
                        .WithMany("DetalleDeIncidencias")
                        .HasForeignKey("TiposDeIncidenciasPk_Id");

                    b.Navigation("HerramientasDeTrabajo");

                    b.Navigation("Incidencias");

                    b.Navigation("NivelDeIncidencias");

                    b.Navigation("TiposDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Direccion", b =>
                {
                    b.HasOne("Dominio.Entities.TipoVia", "TipoDeVias")
                        .WithMany("Direcciones")
                        .HasForeignKey("TipoDeViasPk_Id");

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("Direcciones")
                        .HasForeignKey("UsuariosPk_IdUser");

                    b.Navigation("TipoDeVias");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.HasOne("Dominio.Entities.Area", "Areas")
                        .WithMany("Incidencias")
                        .HasForeignKey("AreasPk_Id");

                    b.HasOne("Dominio.Entities.Lugar", "Lugares")
                        .WithMany("Incidencias")
                        .HasForeignKey("LugaresPk_Id");

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("Incidencias")
                        .HasForeignKey("UsuariosPk_IdUser");

                    b.Navigation("Areas");

                    b.Navigation("Lugares");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.Lugar", b =>
                {
                    b.HasOne("Dominio.Entities.Area", "Areas")
                        .WithMany("Lugares")
                        .HasForeignKey("AreasPk_Id");

                    b.Navigation("Areas");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.HasOne("Dominio.Entities.TipoDocumento", "TipoDeDocumentos")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoDeDocumentosPk_Id");

                    b.Navigation("TipoDeDocumentos");
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", "Rol")
                        .WithMany("UsuariosRoles")
                        .HasForeignKey("RolPk_Id");

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("UsuariosRoles")
                        .HasForeignKey("UsuariosPk_IdUser");

                    b.Navigation("Rol");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesPk_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosPk_IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Area", b =>
                {
                    b.Navigation("AreaDeUsuarios");

                    b.Navigation("Incidencias");

                    b.Navigation("Lugares");
                });

            modelBuilder.Entity("Dominio.Entities.HerramientaTrabajo", b =>
                {
                    b.Navigation("DetalleDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Incidencia", b =>
                {
                    b.Navigation("DetalleDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Lugar", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Dominio.Entities.NivelIncidencia", b =>
                {
                    b.Navigation("DetalleDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Navigation("UsuariosRoles");
                });

            modelBuilder.Entity("Dominio.Entities.TipoContacto", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("Dominio.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entities.TipoIncidencia", b =>
                {
                    b.Navigation("DetalleDeIncidencias");
                });

            modelBuilder.Entity("Dominio.Entities.TipoVia", b =>
                {
                    b.Navigation("Direcciones");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Navigation("AreaDeUsuarios");

                    b.Navigation("Contactos");

                    b.Navigation("Direcciones");

                    b.Navigation("Incidencias");

                    b.Navigation("UsuariosRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
